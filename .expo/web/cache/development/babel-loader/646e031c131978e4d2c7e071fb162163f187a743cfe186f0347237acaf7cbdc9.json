{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport { Audio } from 'expo-av';\nimport * as Speech from 'expo-speech';\nvar AudioService = function () {\n  function AudioService() {\n    _classCallCheck(this, AudioService);\n    this.recording = null;\n  }\n  return _createClass(AudioService, [{\n    key: \"startRecording\",\n    value: function () {\n      var _startRecording = _asyncToGenerator(function* () {\n        try {\n          yield Audio.requestPermissionsAsync();\n          yield Audio.setAudioModeAsync({\n            allowsRecordingIOS: true,\n            playsInSilentModeIOS: true\n          });\n          var _yield$Audio$Recordin = yield Audio.Recording.createAsync(Audio.RecordingOptionsPresets.HIGH_QUALITY),\n            recording = _yield$Audio$Recordin.recording;\n          this.recording = recording;\n        } catch (error) {\n          console.error('Failed to start recording:', error);\n          throw error;\n        }\n      });\n      function startRecording() {\n        return _startRecording.apply(this, arguments);\n      }\n      return startRecording;\n    }()\n  }, {\n    key: \"stopRecording\",\n    value: function () {\n      var _stopRecording = _asyncToGenerator(function* () {\n        if (!this.recording) {\n          throw new Error('No recording in progress');\n        }\n        try {\n          yield this.recording.stopAndUnloadAsync();\n          var uri = this.recording.getURI();\n          this.recording = null;\n          return uri || '';\n        } catch (error) {\n          console.error('Failed to stop recording:', error);\n          throw error;\n        }\n      });\n      function stopRecording() {\n        return _stopRecording.apply(this, arguments);\n      }\n      return stopRecording;\n    }()\n  }, {\n    key: \"speak\",\n    value: function () {\n      var _speak = _asyncToGenerator(function* (text) {\n        try {\n          yield Speech.speak(text, {\n            language: 'en-US',\n            pitch: 1,\n            rate: 0.9\n          });\n        } catch (error) {\n          console.error('Text-to-speech error:', error);\n          throw error;\n        }\n      });\n      function speak(_x) {\n        return _speak.apply(this, arguments);\n      }\n      return speak;\n    }()\n  }]);\n}();\nexport default AudioService;","map":{"version":3,"names":["Audio","Speech","AudioService","_classCallCheck","recording","_createClass","key","value","_startRecording","_asyncToGenerator","requestPermissionsAsync","setAudioModeAsync","allowsRecordingIOS","playsInSilentModeIOS","_yield$Audio$Recordin","Recording","createAsync","RecordingOptionsPresets","HIGH_QUALITY","error","console","startRecording","apply","arguments","_stopRecording","Error","stopAndUnloadAsync","uri","getURI","stopRecording","_speak","text","speak","language","pitch","rate","_x"],"sources":["/Users/bayarmaaorsoo/ZuvuuAI/src/utils/audioService.ts"],"sourcesContent":["import { Audio } from 'expo-av';\nimport * as Speech from 'expo-speech';\nimport { Recording } from 'expo-av/build/Audio';\n\nclass AudioService {\n  private recording: Recording | null = null;\n\n  async startRecording(): Promise<void> {\n    try {\n      await Audio.requestPermissionsAsync();\n      await Audio.setAudioModeAsync({\n        allowsRecordingIOS: true,\n        playsInSilentModeIOS: true,\n      });\n\n      const { recording } = await Audio.Recording.createAsync(\n        Audio.RecordingOptionsPresets.HIGH_QUALITY\n      );\n      this.recording = recording;\n    } catch (error) {\n      console.error('Failed to start recording:', error);\n      throw error;\n    }\n  }\n\n  async stopRecording(): Promise<string> {\n    if (!this.recording) {\n      throw new Error('No recording in progress');\n    }\n\n    try {\n      await this.recording.stopAndUnloadAsync();\n      const uri = this.recording.getURI();\n      this.recording = null;\n      return uri || '';\n    } catch (error) {\n      console.error('Failed to stop recording:', error);\n      throw error;\n    }\n  }\n\n  async speak(text: string): Promise<void> {\n    try {\n      await Speech.speak(text, {\n        language: 'en-US',\n        pitch: 1,\n        rate: 0.9,\n      });\n    } catch (error) {\n      console.error('Text-to-speech error:', error);\n      throw error;\n    }\n  }\n}\n\nexport default AudioService; "],"mappings":";;;AAAA,SAASA,KAAK,QAAQ,SAAS;AAC/B,OAAO,KAAKC,MAAM,MAAM,aAAa;AAAC,IAGhCC,YAAY;EAAA,SAAAA,aAAA;IAAAC,eAAA,OAAAD,YAAA;IAAA,KACRE,SAAS,GAAqB,IAAI;EAAA;EAAA,OAAAC,YAAA,CAAAH,YAAA;IAAAI,GAAA;IAAAC,KAAA;MAAA,IAAAC,eAAA,GAAAC,iBAAA,CAE1C,aAAsC;QACpC,IAAI;UACF,MAAMT,KAAK,CAACU,uBAAuB,CAAC,CAAC;UACrC,MAAMV,KAAK,CAACW,iBAAiB,CAAC;YAC5BC,kBAAkB,EAAE,IAAI;YACxBC,oBAAoB,EAAE;UACxB,CAAC,CAAC;UAEF,IAAAC,qBAAA,SAA4Bd,KAAK,CAACe,SAAS,CAACC,WAAW,CACrDhB,KAAK,CAACiB,uBAAuB,CAACC,YAChC,CAAC;YAFOd,SAAS,GAAAU,qBAAA,CAATV,SAAS;UAGjB,IAAI,CAACA,SAAS,GAAGA,SAAS;QAC5B,CAAC,CAAC,OAAOe,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;UAClD,MAAMA,KAAK;QACb;MACF,CAAC;MAAA,SAhBKE,cAAcA,CAAA;QAAA,OAAAb,eAAA,CAAAc,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAdF,cAAc;IAAA;EAAA;IAAAf,GAAA;IAAAC,KAAA;MAAA,IAAAiB,cAAA,GAAAf,iBAAA,CAkBpB,aAAuC;QACrC,IAAI,CAAC,IAAI,CAACL,SAAS,EAAE;UACnB,MAAM,IAAIqB,KAAK,CAAC,0BAA0B,CAAC;QAC7C;QAEA,IAAI;UACF,MAAM,IAAI,CAACrB,SAAS,CAACsB,kBAAkB,CAAC,CAAC;UACzC,IAAMC,GAAG,GAAG,IAAI,CAACvB,SAAS,CAACwB,MAAM,CAAC,CAAC;UACnC,IAAI,CAACxB,SAAS,GAAG,IAAI;UACrB,OAAOuB,GAAG,IAAI,EAAE;QAClB,CAAC,CAAC,OAAOR,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;UACjD,MAAMA,KAAK;QACb;MACF,CAAC;MAAA,SAdKU,aAAaA,CAAA;QAAA,OAAAL,cAAA,CAAAF,KAAA,OAAAC,SAAA;MAAA;MAAA,OAAbM,aAAa;IAAA;EAAA;IAAAvB,GAAA;IAAAC,KAAA;MAAA,IAAAuB,MAAA,GAAArB,iBAAA,CAgBnB,WAAYsB,IAAY,EAAiB;QACvC,IAAI;UACF,MAAM9B,MAAM,CAAC+B,KAAK,CAACD,IAAI,EAAE;YACvBE,QAAQ,EAAE,OAAO;YACjBC,KAAK,EAAE,CAAC;YACRC,IAAI,EAAE;UACR,CAAC,CAAC;QACJ,CAAC,CAAC,OAAOhB,KAAK,EAAE;UACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;UAC7C,MAAMA,KAAK;QACb;MACF,CAAC;MAAA,SAXKa,KAAKA,CAAAI,EAAA;QAAA,OAAAN,MAAA,CAAAR,KAAA,OAAAC,SAAA;MAAA;MAAA,OAALS,KAAK;IAAA;EAAA;AAAA;AAcb,eAAe9B,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}