{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useNavigation } from '@react-navigation/native';\nimport Constants from 'expo-constants';\nimport { useConversation } from \"../hooks/useConversation\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ConversationScreen = function ConversationScreen() {\n  var _Constants$expoConfig, _Constants$expoConfig2;\n  var navigation = useNavigation();\n  var _useConversation = useConversation(((_Constants$expoConfig = Constants.expoConfig) == null ? void 0 : (_Constants$expoConfig2 = _Constants$expoConfig.extra) == null ? void 0 : _Constants$expoConfig2.OPENAI_API_KEY) || ''),\n    state = _useConversation.state,\n    startConversation = _useConversation.startConversation,\n    startRecording = _useConversation.startRecording,\n    stopRecording = _useConversation.stopRecording;\n  var formatTime = function formatTime(seconds) {\n    var mins = Math.floor(seconds / 60);\n    var secs = seconds % 60;\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\n  };\n  var renderTurn = function renderTurn(turn) {\n    return _jsx(View, {\n      style: [styles.messageContainer, turn.speaker === 'user' ? styles.userMessage : styles.aiMessage],\n      children: _jsx(Text, {\n        style: [styles.messageText, turn.speaker === 'user' ? styles.userMessageText : styles.aiMessageText],\n        children: turn.text\n      })\n    }, turn.timestamp);\n  };\n  React.useEffect(function () {\n    if (state.assessment) {\n      navigation.navigate('Results', {\n        assessment: state.assessment\n      });\n    }\n  }, [state.assessment, navigation]);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.header,\n      children: [_jsx(Text, {\n        style: styles.timer,\n        children: formatTime(state.timeLeft)\n      }), !state.isActive && _jsx(TouchableOpacity, {\n        style: styles.startButton,\n        onPress: startConversation,\n        children: _jsx(Text, {\n          style: styles.startButtonText,\n          children: \"Start Conversation\"\n        })\n      })]\n    }), _jsxs(ScrollView, {\n      style: styles.conversationContainer,\n      contentContainerStyle: styles.conversationContent,\n      children: [state.turns.map(renderTurn), state.isProcessing && _jsx(Text, {\n        style: styles.processingText,\n        children: \"Processing...\"\n      })]\n    }), state.isActive && _jsx(TouchableOpacity, {\n      style: [styles.recordButton, state.isRecording && styles.recordingButton],\n      onPressIn: startRecording,\n      onPressOut: stopRecording,\n      children: _jsx(Text, {\n        style: styles.recordButtonText,\n        children: state.isRecording ? 'Release to Stop' : 'Hold to Speak'\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff'\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: 16,\n    borderBottomWidth: 1,\n    borderBottomColor: '#eee'\n  },\n  timer: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#1a1a1a'\n  },\n  startButton: {\n    backgroundColor: '#007AFF',\n    paddingHorizontal: 20,\n    paddingVertical: 10,\n    borderRadius: 8\n  },\n  startButtonText: {\n    color: '#fff',\n    fontSize: 16,\n    fontWeight: '600'\n  },\n  conversationContainer: {\n    flex: 1\n  },\n  conversationContent: {\n    padding: 16\n  },\n  messageContainer: {\n    padding: 12,\n    borderRadius: 12,\n    marginVertical: 4,\n    maxWidth: '80%'\n  },\n  userMessage: {\n    backgroundColor: '#007AFF',\n    alignSelf: 'flex-end'\n  },\n  aiMessage: {\n    backgroundColor: '#f0f0f0',\n    alignSelf: 'flex-start'\n  },\n  messageText: {\n    fontSize: 16\n  },\n  userMessageText: {\n    color: '#fff'\n  },\n  aiMessageText: {\n    color: '#1a1a1a'\n  },\n  processingText: {\n    fontStyle: 'italic',\n    textAlign: 'center',\n    marginVertical: 8,\n    color: '#666'\n  },\n  recordButton: {\n    backgroundColor: '#007AFF',\n    padding: 16,\n    margin: 16,\n    borderRadius: 12,\n    alignItems: 'center'\n  },\n  recordingButton: {\n    backgroundColor: '#FF3B30'\n  },\n  recordButtonText: {\n    color: '#fff',\n    fontSize: 18,\n    fontWeight: 'bold'\n  }\n});\nexport default ConversationScreen;","map":{"version":3,"names":["React","View","Text","StyleSheet","ScrollView","TouchableOpacity","useNavigation","Constants","useConversation","jsx","_jsx","jsxs","_jsxs","ConversationScreen","_Constants$expoConfig","_Constants$expoConfig2","navigation","_useConversation","expoConfig","extra","OPENAI_API_KEY","state","startConversation","startRecording","stopRecording","formatTime","seconds","mins","Math","floor","secs","toString","padStart","renderTurn","turn","style","styles","messageContainer","speaker","userMessage","aiMessage","children","messageText","userMessageText","aiMessageText","text","timestamp","useEffect","assessment","navigate","container","header","timer","timeLeft","isActive","startButton","onPress","startButtonText","conversationContainer","contentContainerStyle","conversationContent","turns","map","isProcessing","processingText","recordButton","isRecording","recordingButton","onPressIn","onPressOut","recordButtonText","create","flex","backgroundColor","flexDirection","justifyContent","alignItems","padding","borderBottomWidth","borderBottomColor","fontSize","fontWeight","color","paddingHorizontal","paddingVertical","borderRadius","marginVertical","maxWidth","alignSelf","fontStyle","textAlign","margin"],"sources":["/Users/bayarmaaorsoo/ZuvuuAI/src/components/ConversationScreen.tsx"],"sourcesContent":["import React from 'react';\nimport { View, Text, StyleSheet, ScrollView, TouchableOpacity } from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\nimport { NativeStackNavigationProp } from '@react-navigation/native-stack';\nimport Constants from 'expo-constants';\nimport { useConversation } from '../hooks/useConversation';\nimport { ConversationTurn } from '../types';\nimport { RootStackParamList } from '../navigation/types';\n\ntype NavigationProp = NativeStackNavigationProp<RootStackParamList, 'Conversation'>;\n\nconst ConversationScreen: React.FC = () => {\n  const navigation = useNavigation<NavigationProp>();\n  const { state, startConversation, startRecording, stopRecording } = useConversation(\n    Constants.expoConfig?.extra?.OPENAI_API_KEY || ''\n  );\n\n  const formatTime = (seconds: number): string => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\n  };\n\n  const renderTurn = (turn: ConversationTurn) => (\n    <View\n      key={turn.timestamp}\n      style={[\n        styles.messageContainer,\n        turn.speaker === 'user' ? styles.userMessage : styles.aiMessage,\n      ]}\n    >\n      <Text style={[\n        styles.messageText,\n        turn.speaker === 'user' ? styles.userMessageText : styles.aiMessageText\n      ]}>\n        {turn.text}\n      </Text>\n    </View>\n  );\n\n  React.useEffect(() => {\n    if (state.assessment) {\n      navigation.navigate('Results', { assessment: state.assessment });\n    }\n  }, [state.assessment, navigation]);\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.header}>\n        <Text style={styles.timer}>{formatTime(state.timeLeft)}</Text>\n        {!state.isActive && (\n          <TouchableOpacity\n            style={styles.startButton}\n            onPress={startConversation}\n          >\n            <Text style={styles.startButtonText}>Start Conversation</Text>\n          </TouchableOpacity>\n        )}\n      </View>\n\n      <ScrollView \n        style={styles.conversationContainer}\n        contentContainerStyle={styles.conversationContent}\n      >\n        {state.turns.map(renderTurn)}\n        {state.isProcessing && (\n          <Text style={styles.processingText}>Processing...</Text>\n        )}\n      </ScrollView>\n\n      {state.isActive && (\n        <TouchableOpacity\n          style={[styles.recordButton, state.isRecording && styles.recordingButton]}\n          onPressIn={startRecording}\n          onPressOut={stopRecording}\n        >\n          <Text style={styles.recordButtonText}>\n            {state.isRecording ? 'Release to Stop' : 'Hold to Speak'}\n          </Text>\n        </TouchableOpacity>\n      )}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: 16,\n    borderBottomWidth: 1,\n    borderBottomColor: '#eee',\n  },\n  timer: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#1a1a1a',\n  },\n  startButton: {\n    backgroundColor: '#007AFF',\n    paddingHorizontal: 20,\n    paddingVertical: 10,\n    borderRadius: 8,\n  },\n  startButtonText: {\n    color: '#fff',\n    fontSize: 16,\n    fontWeight: '600',\n  },\n  conversationContainer: {\n    flex: 1,\n  },\n  conversationContent: {\n    padding: 16,\n  },\n  messageContainer: {\n    padding: 12,\n    borderRadius: 12,\n    marginVertical: 4,\n    maxWidth: '80%',\n  },\n  userMessage: {\n    backgroundColor: '#007AFF',\n    alignSelf: 'flex-end',\n  },\n  aiMessage: {\n    backgroundColor: '#f0f0f0',\n    alignSelf: 'flex-start',\n  },\n  messageText: {\n    fontSize: 16,\n  },\n  userMessageText: {\n    color: '#fff',\n  },\n  aiMessageText: {\n    color: '#1a1a1a',\n  },\n  processingText: {\n    fontStyle: 'italic',\n    textAlign: 'center',\n    marginVertical: 8,\n    color: '#666',\n  },\n  recordButton: {\n    backgroundColor: '#007AFF',\n    padding: 16,\n    margin: 16,\n    borderRadius: 12,\n    alignItems: 'center',\n  },\n  recordingButton: {\n    backgroundColor: '#FF3B30',\n  },\n  recordButtonText: {\n    color: '#fff',\n    fontSize: 18,\n    fontWeight: 'bold',\n  },\n});\n\nexport default ConversationScreen; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}