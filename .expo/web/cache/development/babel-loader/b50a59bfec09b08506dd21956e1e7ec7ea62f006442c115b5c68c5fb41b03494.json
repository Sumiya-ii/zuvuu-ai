{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { useState, useEffect, useCallback } from 'react';\nimport AIService from \"../utils/aiService\";\nimport AudioService from \"../utils/audioService\";\nvar CONVERSATION_TIME = 180;\nexport var useConversation = function useConversation(apiKey) {\n  var _useState = useState({\n      isActive: false,\n      timeLeft: CONVERSATION_TIME,\n      turns: [],\n      isRecording: false,\n      isProcessing: false,\n      assessment: null\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    state = _useState2[0],\n    setState = _useState2[1];\n  var aiService = new AIService(apiKey);\n  var audioService = new AudioService();\n  useEffect(function () {\n    var timer;\n    if (state.isActive && state.timeLeft > 0) {\n      timer = setInterval(function () {\n        setState(function (prev) {\n          return _objectSpread(_objectSpread({}, prev), {}, {\n            timeLeft: prev.timeLeft - 1\n          });\n        });\n      }, 1000);\n    } else if (state.timeLeft === 0) {\n      endConversation();\n    }\n    return function () {\n      return clearInterval(timer);\n    };\n  }, [state.isActive, state.timeLeft]);\n  var startConversation = useCallback(_asyncToGenerator(function* () {\n    setState(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        isActive: true,\n        timeLeft: CONVERSATION_TIME,\n        turns: [],\n        assessment: null\n      });\n    });\n    var initialPrompt = yield aiService.getAIResponse(['Start a casual conversation']);\n    yield audioService.speak(initialPrompt);\n    setState(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        turns: [].concat(_toConsumableArray(prev.turns), [{\n          speaker: 'ai',\n          text: initialPrompt,\n          timestamp: Date.now()\n        }])\n      });\n    });\n  }), []);\n  var startRecording = useCallback(_asyncToGenerator(function* () {\n    if (!state.isActive || state.isRecording) return;\n    setState(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        isRecording: true\n      });\n    });\n    yield audioService.startRecording();\n  }), [state.isActive, state.isRecording]);\n  var stopRecording = useCallback(_asyncToGenerator(function* () {\n    if (!state.isRecording) return;\n    setState(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        isRecording: false,\n        isProcessing: true\n      });\n    });\n    var audioUri = yield audioService.stopRecording();\n    var transcription = yield aiService.transcribeAudio(audioUri);\n    setState(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        turns: [].concat(_toConsumableArray(prev.turns), [{\n          speaker: 'user',\n          text: transcription,\n          timestamp: Date.now()\n        }])\n      });\n    });\n    var conversation = state.turns.map(function (turn) {\n      return turn.text;\n    });\n    var aiResponse = yield aiService.getAIResponse([].concat(_toConsumableArray(conversation), [transcription]));\n    yield audioService.speak(aiResponse);\n    setState(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        isProcessing: false,\n        turns: [].concat(_toConsumableArray(prev.turns), [{\n          speaker: 'ai',\n          text: aiResponse,\n          timestamp: Date.now()\n        }])\n      });\n    });\n  }), [state.isRecording, state.turns]);\n  var endConversation = useCallback(_asyncToGenerator(function* () {\n    setState(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        isActive: false,\n        isProcessing: true\n      });\n    });\n    var transcript = state.turns.map(function (turn) {\n      return turn.text;\n    });\n    var assessment = yield aiService.assessSpeaking(transcript);\n    setState(function (prev) {\n      return _objectSpread(_objectSpread({}, prev), {}, {\n        isProcessing: false,\n        assessment: assessment\n      });\n    });\n  }), [state.turns]);\n  return {\n    state: state,\n    startConversation: startConversation,\n    startRecording: startRecording,\n    stopRecording: stopRecording,\n    endConversation: endConversation\n  };\n};\nexport default useConversation;","map":{"version":3,"names":["useState","useEffect","useCallback","AIService","AudioService","CONVERSATION_TIME","useConversation","apiKey","_useState","isActive","timeLeft","turns","isRecording","isProcessing","assessment","_useState2","_slicedToArray","state","setState","aiService","audioService","timer","setInterval","prev","_objectSpread","endConversation","clearInterval","startConversation","_asyncToGenerator","initialPrompt","getAIResponse","speak","concat","_toConsumableArray","speaker","text","timestamp","Date","now","startRecording","stopRecording","audioUri","transcription","transcribeAudio","conversation","map","turn","aiResponse","transcript","assessSpeaking"],"sources":["/Users/bayarmaaorsoo/ZuvuuAI/src/hooks/useConversation.ts"],"sourcesContent":["import { useState, useEffect, useCallback } from 'react';\nimport { ConversationState, ConversationTurn, AssessmentFeedback } from '../types';\nimport AIService from '../utils/aiService';\nimport AudioService from '../utils/audioService';\n\nconst CONVERSATION_TIME = 180; // 3 minutes\n\nexport const useConversation = (apiKey: string) => {\n  const [state, setState] = useState<ConversationState>({\n    isActive: false,\n    timeLeft: CONVERSATION_TIME,\n    turns: [],\n    isRecording: false,\n    isProcessing: false,\n    assessment: null,\n  });\n\n  const aiService = new AIService(apiKey);\n  const audioService = new AudioService();\n\n  useEffect(() => {\n    let timer: NodeJS.Timeout;\n    if (state.isActive && state.timeLeft > 0) {\n      timer = setInterval(() => {\n        setState(prev => ({ ...prev, timeLeft: prev.timeLeft - 1 }));\n      }, 1000);\n    } else if (state.timeLeft === 0) {\n      endConversation();\n    }\n    return () => clearInterval(timer);\n  }, [state.isActive, state.timeLeft]);\n\n  const startConversation = useCallback(async () => {\n    setState(prev => ({\n      ...prev,\n      isActive: true,\n      timeLeft: CONVERSATION_TIME,\n      turns: [],\n      assessment: null,\n    }));\n\n    // Initial AI prompt\n    const initialPrompt = await aiService.getAIResponse(['Start a casual conversation']);\n    await audioService.speak(initialPrompt);\n\n    setState(prev => ({\n      ...prev,\n      turns: [...prev.turns, { speaker: 'ai', text: initialPrompt, timestamp: Date.now() }],\n    }));\n  }, []);\n\n  const startRecording = useCallback(async () => {\n    if (!state.isActive || state.isRecording) return;\n\n    setState(prev => ({ ...prev, isRecording: true }));\n    await audioService.startRecording();\n  }, [state.isActive, state.isRecording]);\n\n  const stopRecording = useCallback(async () => {\n    if (!state.isRecording) return;\n\n    setState(prev => ({ ...prev, isRecording: false, isProcessing: true }));\n    const audioUri = await audioService.stopRecording();\n    const transcription = await aiService.transcribeAudio(audioUri);\n\n    // Add user's turn\n    setState(prev => ({\n      ...prev,\n      turns: [...prev.turns, { speaker: 'user', text: transcription, timestamp: Date.now() }],\n    }));\n\n    // Get AI response\n    const conversation = state.turns.map(turn => turn.text);\n    const aiResponse = await aiService.getAIResponse([...conversation, transcription]);\n    await audioService.speak(aiResponse);\n\n    // Add AI's turn\n    setState(prev => ({\n      ...prev,\n      isProcessing: false,\n      turns: [...prev.turns, { speaker: 'ai', text: aiResponse, timestamp: Date.now() }],\n    }));\n  }, [state.isRecording, state.turns]);\n\n  const endConversation = useCallback(async () => {\n    setState(prev => ({ ...prev, isActive: false, isProcessing: true }));\n\n    const transcript = state.turns.map(turn => turn.text);\n    const assessment = await aiService.assessSpeaking(transcript);\n\n    setState(prev => ({ ...prev, isProcessing: false, assessment }));\n  }, [state.turns]);\n\n  return {\n    state,\n    startConversation,\n    startRecording,\n    stopRecording,\n    endConversation,\n  };\n};\n\nexport default useConversation; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}