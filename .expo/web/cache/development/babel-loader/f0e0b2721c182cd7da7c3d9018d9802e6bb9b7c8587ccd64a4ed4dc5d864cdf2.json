{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useNavigation, useRoute } from '@react-navigation/native';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ResultsScreen = function ResultsScreen() {\n  var navigation = useNavigation();\n  var route = useRoute();\n  var assessment = route.params.assessment;\n  var renderScoreSection = function renderScoreSection(title, score, feedback) {\n    return _jsxs(View, {\n      style: styles.scoreSection,\n      children: [_jsxs(View, {\n        style: styles.scoreHeader,\n        children: [_jsx(Text, {\n          style: styles.scoreTitle,\n          children: title\n        }), _jsx(View, {\n          style: styles.scoreCircle,\n          children: _jsx(Text, {\n            style: styles.scoreText,\n            children: score\n          })\n        })]\n      }), _jsx(Text, {\n        style: styles.feedbackText,\n        children: feedback\n      })]\n    });\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.header,\n      children: [_jsx(Text, {\n        style: styles.title,\n        children: \"Speaking Assessment\"\n      }), _jsx(TouchableOpacity, {\n        style: styles.homeButton,\n        onPress: function onPress() {\n          return navigation.navigate('Landing');\n        },\n        children: _jsx(Text, {\n          style: styles.homeButtonText,\n          children: \"Home\"\n        })\n      })]\n    }), _jsxs(ScrollView, {\n      style: styles.scrollContainer,\n      children: [renderScoreSection('Fluency', assessment.fluency, assessment.fluencyFeedback), renderScoreSection('Grammar', assessment.grammar, assessment.grammarFeedback), renderScoreSection('Pronunciation', assessment.pronunciation, assessment.pronunciationFeedback), renderScoreSection('Vocabulary', assessment.vocabulary, assessment.vocabularyFeedback)]\n    }), _jsxs(View, {\n      style: styles.buttonContainer,\n      children: [_jsx(TouchableOpacity, {\n        style: styles.button,\n        onPress: function onPress() {\n          return navigation.navigate('Conversation');\n        },\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \"Try Again\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: [styles.button, styles.reviewButton],\n        onPress: function onPress() {},\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \"Review Transcript\"\n        })\n      })]\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff'\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: 16,\n    borderBottomWidth: 1,\n    borderBottomColor: '#eee'\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#1a1a1a'\n  },\n  homeButton: {\n    padding: 8\n  },\n  homeButtonText: {\n    color: '#007AFF',\n    fontSize: 16\n  },\n  scrollContainer: {\n    flex: 1,\n    padding: 16\n  },\n  scoreSection: {\n    marginBottom: 24,\n    backgroundColor: '#f8f9fa',\n    padding: 16,\n    borderRadius: 12\n  },\n  scoreHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 8\n  },\n  scoreTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#1a1a1a'\n  },\n  scoreCircle: {\n    width: 40,\n    height: 40,\n    borderRadius: 20,\n    backgroundColor: '#007AFF',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  scoreText: {\n    color: '#fff',\n    fontSize: 18,\n    fontWeight: 'bold'\n  },\n  feedbackText: {\n    fontSize: 16,\n    lineHeight: 24,\n    color: '#666'\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    padding: 16,\n    borderTopWidth: 1,\n    borderTopColor: '#eee'\n  },\n  button: {\n    backgroundColor: '#007AFF',\n    paddingVertical: 12,\n    paddingHorizontal: 24,\n    borderRadius: 8,\n    minWidth: 120,\n    alignItems: 'center'\n  },\n  reviewButton: {\n    backgroundColor: '#34C759'\n  },\n  buttonText: {\n    color: '#fff',\n    fontSize: 16,\n    fontWeight: '600'\n  }\n});\nexport default ResultsScreen;","map":{"version":3,"names":["React","View","Text","StyleSheet","ScrollView","TouchableOpacity","useNavigation","useRoute","jsx","_jsx","jsxs","_jsxs","ResultsScreen","navigation","route","assessment","params","renderScoreSection","title","score","feedback","style","styles","scoreSection","children","scoreHeader","scoreTitle","scoreCircle","scoreText","feedbackText","container","header","homeButton","onPress","navigate","homeButtonText","scrollContainer","fluency","fluencyFeedback","grammar","grammarFeedback","pronunciation","pronunciationFeedback","vocabulary","vocabularyFeedback","buttonContainer","button","buttonText","reviewButton","create","flex","backgroundColor","flexDirection","justifyContent","alignItems","padding","borderBottomWidth","borderBottomColor","fontSize","fontWeight","color","marginBottom","borderRadius","width","height","lineHeight","borderTopWidth","borderTopColor","paddingVertical","paddingHorizontal","minWidth"],"sources":["/Users/bayarmaaorsoo/ZuvuuAI/src/components/ResultsScreen.tsx"],"sourcesContent":["import React from 'react';\nimport { View, Text, StyleSheet, ScrollView, TouchableOpacity } from 'react-native';\nimport { useNavigation, useRoute, RouteProp } from '@react-navigation/native';\nimport { NativeStackNavigationProp } from '@react-navigation/native-stack';\nimport { AssessmentFeedback } from '../types';\nimport { RootStackParamList } from '../navigation/types';\n\ntype NavigationProp = NativeStackNavigationProp<RootStackParamList, 'Results'>;\ntype ResultsRouteProp = RouteProp<RootStackParamList, 'Results'>;\n\nconst ResultsScreen: React.FC = () => {\n  const navigation = useNavigation<NavigationProp>();\n  const route = useRoute<ResultsRouteProp>();\n  const { assessment } = route.params;\n\n  const renderScoreSection = (\n    title: string,\n    score: number,\n    feedback: string\n  ) => (\n    <View style={styles.scoreSection}>\n      <View style={styles.scoreHeader}>\n        <Text style={styles.scoreTitle}>{title}</Text>\n        <View style={styles.scoreCircle}>\n          <Text style={styles.scoreText}>{score}</Text>\n        </View>\n      </View>\n      <Text style={styles.feedbackText}>{feedback}</Text>\n    </View>\n  );\n\n  return (\n    <View style={styles.container}>\n      <View style={styles.header}>\n        <Text style={styles.title}>Speaking Assessment</Text>\n        <TouchableOpacity\n          style={styles.homeButton}\n          onPress={() => navigation.navigate('Landing')}\n        >\n          <Text style={styles.homeButtonText}>Home</Text>\n        </TouchableOpacity>\n      </View>\n      \n      <ScrollView style={styles.scrollContainer}>\n        {renderScoreSection('Fluency', assessment.fluency, assessment.fluencyFeedback)}\n        {renderScoreSection('Grammar', assessment.grammar, assessment.grammarFeedback)}\n        {renderScoreSection(\n          'Pronunciation',\n          assessment.pronunciation,\n          assessment.pronunciationFeedback\n        )}\n        {renderScoreSection(\n          'Vocabulary',\n          assessment.vocabulary,\n          assessment.vocabularyFeedback\n        )}\n      </ScrollView>\n\n      <View style={styles.buttonContainer}>\n        <TouchableOpacity\n          style={styles.button}\n          onPress={() => navigation.navigate('Conversation')}\n        >\n          <Text style={styles.buttonText}>Try Again</Text>\n        </TouchableOpacity>\n        <TouchableOpacity\n          style={[styles.button, styles.reviewButton]}\n          onPress={() => {/* TODO: Implement transcript review */}}\n        >\n          <Text style={styles.buttonText}>Review Transcript</Text>\n        </TouchableOpacity>\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n  },\n  header: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: 16,\n    borderBottomWidth: 1,\n    borderBottomColor: '#eee',\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#1a1a1a',\n  },\n  homeButton: {\n    padding: 8,\n  },\n  homeButtonText: {\n    color: '#007AFF',\n    fontSize: 16,\n  },\n  scrollContainer: {\n    flex: 1,\n    padding: 16,\n  },\n  scoreSection: {\n    marginBottom: 24,\n    backgroundColor: '#f8f9fa',\n    padding: 16,\n    borderRadius: 12,\n  },\n  scoreHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 8,\n  },\n  scoreTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#1a1a1a',\n  },\n  scoreCircle: {\n    width: 40,\n    height: 40,\n    borderRadius: 20,\n    backgroundColor: '#007AFF',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  scoreText: {\n    color: '#fff',\n    fontSize: 18,\n    fontWeight: 'bold',\n  },\n  feedbackText: {\n    fontSize: 16,\n    lineHeight: 24,\n    color: '#666',\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    padding: 16,\n    borderTopWidth: 1,\n    borderTopColor: '#eee',\n  },\n  button: {\n    backgroundColor: '#007AFF',\n    paddingVertical: 12,\n    paddingHorizontal: 24,\n    borderRadius: 8,\n    minWidth: 120,\n    alignItems: 'center',\n  },\n  reviewButton: {\n    backgroundColor: '#34C759',\n  },\n  buttonText: {\n    color: '#fff',\n    fontSize: 16,\n    fontWeight: '600',\n  },\n});\n\nexport default ResultsScreen; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}