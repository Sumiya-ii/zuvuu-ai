{"ast":null,"code":"var _Constants$expoConfig, _Constants$expoConfig2, _Constants$manifest, _Constants$manifest$e, _Constants$expoConfig3, _Constants$expoConfig4, _Constants$manifest2, _Constants$manifest2$;\nimport { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Constants from 'expo-constants';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar openaiKey = ((_Constants$expoConfig = Constants.expoConfig) == null ? void 0 : (_Constants$expoConfig2 = _Constants$expoConfig.extra) == null ? void 0 : _Constants$expoConfig2.OPENAI_API_KEY) || ((_Constants$manifest = Constants.manifest) == null ? void 0 : (_Constants$manifest$e = _Constants$manifest.extra) == null ? void 0 : _Constants$manifest$e.OPENAI_API_KEY);\nvar launchDarklyKey = ((_Constants$expoConfig3 = Constants.expoConfig) == null ? void 0 : (_Constants$expoConfig4 = _Constants$expoConfig3.extra) == null ? void 0 : _Constants$expoConfig4.LAUNCHDARKLY_CLIENT_ID) || ((_Constants$manifest2 = Constants.manifest) == null ? void 0 : (_Constants$manifest2$ = _Constants$manifest2.extra) == null ? void 0 : _Constants$manifest2$.LAUNCHDARKLY_CLIENT_ID);\nconsole.log('OpenAI Key:', openaiKey);\nconsole.log('LaunchDarkly Key:', launchDarklyKey);\nexport default function App() {\n  var handlePress = function handlePress() {\n    Alert.alert('ðŸŽ‰ Success!', 'Your React Native + TypeScript setup is working!');\n  };\n  return _jsxs(SafeAreaView, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.text,\n      children: \"Hello ZuvuuAI \\uD83D\\uDC4B\"\n    }), _jsx(Button, {\n      title: \"Test Alert\",\n      onPress: handlePress\n    }), _jsx(StatusBar, {\n      style: \"auto\"\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#fff',\n    padding: 16\n  },\n  text: {\n    fontSize: 22,\n    fontWeight: 'bold',\n    marginBottom: 16\n  }\n});","map":{"version":3,"names":["StatusBar","React","SafeAreaView","Text","StyleSheet","Button","Alert","Constants","jsx","_jsx","jsxs","_jsxs","openaiKey","_Constants$expoConfig","expoConfig","_Constants$expoConfig2","extra","OPENAI_API_KEY","_Constants$manifest","manifest","_Constants$manifest$e","launchDarklyKey","_Constants$expoConfig3","_Constants$expoConfig4","LAUNCHDARKLY_CLIENT_ID","_Constants$manifest2","_Constants$manifest2$","console","log","App","handlePress","alert","style","styles","container","children","text","title","onPress","create","flex","justifyContent","alignItems","backgroundColor","padding","fontSize","fontWeight","marginBottom"],"sources":["/Users/bayarmaaorsoo/ZuvuuAI/App.tsx"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { SafeAreaView, Text, View, StyleSheet, Button, Alert } from 'react-native';\nimport Constants from 'expo-constants';\n\nconst openaiKey = Constants.expoConfig?.extra?.OPENAI_API_KEY || Constants.manifest?.extra?.OPENAI_API_KEY;\nconst launchDarklyKey = Constants.expoConfig?.extra?.LAUNCHDARKLY_CLIENT_ID || Constants.manifest?.extra?.LAUNCHDARKLY_CLIENT_ID;\n\nconsole.log('OpenAI Key:', openaiKey);\nconsole.log('LaunchDarkly Key:', launchDarklyKey);\n\nexport default function App() {\n  const handlePress = () => {\n    Alert.alert('ðŸŽ‰ Success!', 'Your React Native + TypeScript setup is working!');\n  };\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <Text style={styles.text}>Hello ZuvuuAI ðŸ‘‹</Text>\n      <Button title=\"Test Alert\" onPress={handlePress} />\n      <StatusBar style=\"auto\" />\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#fff',\n    padding: 16,\n  },\n  text: {\n    fontSize: 22,\n    fontWeight: 'bold',\n    marginBottom: 16,\n  },\n});\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,iBAAiB;AAC3C,OAAOC,KAAK,MAAM,OAAO;AAAC,OAAAC,YAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,MAAA;AAAA,OAAAC,KAAA;AAE1B,OAAOC,SAAS,MAAM,gBAAgB;AAAC,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAEvC,IAAMC,SAAS,GAAG,EAAAC,qBAAA,GAAAN,SAAS,CAACO,UAAU,sBAAAC,sBAAA,GAApBF,qBAAA,CAAsBG,KAAK,qBAA3BD,sBAAA,CAA6BE,cAAc,OAAAC,mBAAA,GAAIX,SAAS,CAACY,QAAQ,sBAAAC,qBAAA,GAAlBF,mBAAA,CAAoBF,KAAK,qBAAzBI,qBAAA,CAA2BH,cAAc;AAC1G,IAAMI,eAAe,GAAG,EAAAC,sBAAA,GAAAf,SAAS,CAACO,UAAU,sBAAAS,sBAAA,GAApBD,sBAAA,CAAsBN,KAAK,qBAA3BO,sBAAA,CAA6BC,sBAAsB,OAAAC,oBAAA,GAAIlB,SAAS,CAACY,QAAQ,sBAAAO,qBAAA,GAAlBD,oBAAA,CAAoBT,KAAK,qBAAzBU,qBAAA,CAA2BF,sBAAsB;AAEhIG,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEhB,SAAS,CAAC;AACrCe,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEP,eAAe,CAAC;AAEjD,eAAe,SAASQ,GAAGA,CAAA,EAAG;EAC5B,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;IACxBxB,KAAK,CAACyB,KAAK,CAAC,aAAa,EAAE,kDAAkD,CAAC;EAChF,CAAC;EAED,OACEpB,KAAA,CAACT,YAAY;IAAC8B,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GACpC1B,IAAA,CAACN,IAAI;MAAC6B,KAAK,EAAEC,MAAM,CAACG,IAAK;MAAAD,QAAA,EAAC;IAAgB,CAAM,CAAC,EACjD1B,IAAA,CAACJ,MAAM;MAACgC,KAAK,EAAC,YAAY;MAACC,OAAO,EAAER;IAAY,CAAE,CAAC,EACnDrB,IAAA,CAACT,SAAS;MAACgC,KAAK,EAAC;IAAM,CAAE,CAAC;EAAA,CACd,CAAC;AAEnB;AAEA,IAAMC,MAAM,GAAG7B,UAAU,CAACmC,MAAM,CAAC;EAC/BL,SAAS,EAAE;IACTM,IAAI,EAAE,CAAC;IACPC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,QAAQ;IACpBC,eAAe,EAAE,MAAM;IACvBC,OAAO,EAAE;EACX,CAAC;EACDR,IAAI,EAAE;IACJS,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBC,YAAY,EAAE;EAChB;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}